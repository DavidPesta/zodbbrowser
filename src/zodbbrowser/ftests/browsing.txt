ZODB Browsing
-------------

You can start by looking at the root folder

    >>> browser = Browser(url)

We see the object's path (which is '/' for the root folder) at the top

    >>> printCSSPath(browser, 'h1#path')
    <h1 id="path">
      <span class="breadcrumbs">
        <a href="@@zodbbrowser?oid=1">/</a>
      </span>
    </h1>

We see the class name right underneath that

    >>> printCSSPath(browser, 'h2.type')
    <h2 class="type">
      &lt;class 'zope.app.folder.folder.Folder'&gt;
    </h2>

After that we have three sections: Attributes, Items and History

    >>> printCSSPath(browser, 'h3.expander')
    <h3 class="expander">
      <img alt="collapse" src="http://localhost/@@/zodbbrowser/collapse.png">
      Attributes
    </h3>
    <h3 class="expander">
      <img alt="collapse" src="http://localhost/@@/zodbbrowser/collapse.png">
      Items (0)
    </h3>
    <h3 class="expander">
      <img alt="collapse" src="http://localhost/@@/zodbbrowser/collapse.png">
      History
    </h3>


Attributes
~~~~~~~~~~

Attributes lists all the attributes stored in the database

    >>> printCSSPath(browser, 'div.attributes span.attr > strong')
    <strong>__annotations__</strong>
    <strong>__provides__</strong>
    <strong>_sm</strong>
    <strong>data</strong>

and their values, of course.  Where the values are persistent object
references, we show hyperlinks

    >>> printXPath(browser,
    ...     '//span[@class="attr" and ./strong[text()="__annotations__"]]')
    <span class="attr">
      <strong>__annotations__</strong>:
      <a class="objlink" href="@@zodbbrowser?oid=2">
        &lt;BTrees.OOBTree.OOBTree object at 0xXXXXXXX&gt; (1 item)
      </a>
    </span>

Where the values are non-persistent, we show their representation

    >>> printXPath(browser,
    ...     '//strong[text()="__provides__"]/parent::span[@class="attr"]')
    <span class="attr">
      <strong>__provides__</strong>: &lt;Provides: zope.location.interfaces.ISite, zope.app.folder.interfaces.IRootFolder&gt;
    </span>


Items
~~~~~

The 'Items' section is only present on things that are container-like.
Usually it duplicates information accessible via some attribute.  In
this particular case, all the items are stored in the 'data' attribute

    >>> printXPath(browser,
    ...     '//span[@class="attr" and ./strong[text()="data"]]')
    <span class="attr">
      <strong>data</strong>:
      <a class="objlink" href="@@zodbbrowser?oid=3">
        &lt;BTrees.OOBTree.OOBTree object at 0xXXXXXXX&gt; (0 items)
      </a>
    </span>

To save on clicking, they're extracted from the subobject and presented
here directly:

    >>> printCSSPath(browser, 'div.items > div.collapsible')
    <div class="collapsible">
      <span class="empty">There are none.</span>
    </div>

In this case, there are no items.


History
~~~~~~~

The 'History' section shows all the transactions that modified this object.
When you pack the database, old transactions are discarded and will no longer
be visible.

This is a fresh database, so it has only one transaction:

    >>> printCSSPath(browser, 'div.history h4')
    <h4 class="transaction">
      <a href="@@zodbbrowser?oid=1">Latest</a>
    </h4>
    <h4 class="transaction" id="tidXXXXXXXXXXXXXXXXXX">
      <a href="@@zodbbrowser?oid=1&amp;tid=XXXXXXXXXXXXXXXXXX">
        #1:
        <span>YYYY-MM-DD HH:MM:SS</span>
      </a>
    </h4>

Each transaction shows which attributes have changed

    >>> printCSSPath(browser, 'div.transaction > div.diff')
    <div class="diff">
      <div class="diffitem added">
        <strong>__annotations__</strong>: added
        <a class="objlink" href="@@zodbbrowser?oid=2&amp;tid=XXXXXXXXXXXXXXXXXX">
          &lt;BTrees.OOBTree.OOBTree object at 0xXXXXXXX&gt; (1 item)
        </a>
      </div>
      <div class="diffitem added">
        <strong>__provides__</strong>: added &lt;Provides: zope.location.interfaces.ISite, zope.app.folder.interfaces.IRootFolder&gt;
      </div>
      <div class="diffitem added">
        <strong>_sm</strong>: added
        <a class="objlink" href="@@zodbbrowser?oid=4&amp;tid=XXXXXXXXXXXXXXXXXX">
          &lt;LocalSiteManager ++etc++site&gt; (1 item)
        </a>
      </div>
      <div class="diffitem added">
        <strong>data</strong>: added
        <a class="objlink" href="@@zodbbrowser?oid=3&amp;tid=XXXXXXXXXXXXXXXXXX">
          &lt;BTrees.OOBTree.OOBTree object at 0xXXXXXXX&gt; (0 items)
        </a>
      </div>
    </div>


History browsing
----------------

Hyperlinks inside transactions point to specific object versions (this
matters when there's more than one).  Click on any to see how the
world looked at the time when that particular transaction was committed

    >>> browser.getLink(url='oid=3&tid=').click()
    >>> printCSSPath(browser, 'h2.type')
    <h2 class="type">&lt;type 'BTrees.OOBTree.OOBTree'&gt;</h2>

Incidentally, you can see how the breadcrumbs look when the object you're
looking at has no ``__parent__`` attribute to hint at its location:

    >>> printCSSPath(browser, 'h1#path')
    <h1 id="path">
      <span class="breadcrumbs">
        <a href="@@zodbbrowser?oid=1&amp;tid=XXXXXXXXXXXXXXXXXX">
          /
        </a>.../
        <a href="@@zodbbrowser?oid=3&amp;tid=XXXXXXXXXXXXXXXXXX">
          ???
        </a>
      </span>
    </h1>

There's a new yellow bar in the title area reminding you that you're
looking at an old snapshot instead of the current state

    >>> printCSSPath(browser, 'div.tid-info')
    <div class="tid-info"> at
      <a href="#tidXXXXXXXXXXXXXXXXXX">YYYY-MM-DD HH:MM:SS.SSSSSS</a>
      (last change before or at YYYY-MM-DD HH:MM:SS.SSSSSS)
    </div>


Hex OIDs
--------

It's possible to enter hex OIDs without conversion in the URL:

    >>> browser.open('/@@zodbbrowser?oid=0x01')

    >>> 'error' in browser.contents
    False
